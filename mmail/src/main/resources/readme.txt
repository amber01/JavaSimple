一、介绍
1. 项目结构
common //常量、全局异常都放到这个包里面
controller
dao   //dao层在最下面和db交互，然后上边是service，service的最上层是controller层
pojo  //pojo是简单的数据库的一个对象，在上一层是通过vo进行封装然后返给controller再反给前端进行展示。当然也可以在pojo的上层使用bo，bo再上层使用vo。
service
util  //工具类都放到这里
vo  //view object或者value object或者再复杂的业务还可以加一次bo。vo最下面有一个pojo。

2. mybatis三剑客
  *mybatis-generator
  1）mybatis-generator根据我们的数据库自动生成pojo和dao还有对应的xml文件。pojo里面放的是和db里面一一对应的字段，dao层是一个接口
     给service调用，xml是这个dao层接口的实现。

二、用户模块开发
1. 用户模块开发概要与接口设计
  1)功能：登录、用户名验证、注册、忘记密码、提交问题答案、重置密码、获取用户信息、更新用户信息、退出登录
  2)所需技术：
    1. 横向越权，纵向越权安全漏洞
    2. MD5铭文加密及增加salt值
    3. Guava缓存的使用
    4. 高服用服务响应对象的设计思想及抽象封装
    5. session的使用
    * 横向越权
     1. 攻击装尝试访问与他拥有相同权限的用户的资源
     2. 比如：我说一个普通用户，我可以查看我的订单详情，但是我们在写的时候经常会忽略这个问题，导致了我们的接口入参的时候
        如果传一某一个订单号，我们都可以查到。也就是A用户获得接口之后，可以恶意的获取其他订单的查询。
    * 纵向越权
     1. 低级别攻击者尝试访问高级别用户的资源
     2. 比如：普通用户通过分析接口，可以上升到管理员的级别。

